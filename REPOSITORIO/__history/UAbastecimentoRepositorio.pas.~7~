unit UAbastecimentoRepositorio;

interface

uses
  System.Generics.Collections, Data.SqlExpr, abastecimento;

type TAbastecimentoRepositorio = class
  private
    FSQLQuery : TSQLQuery;
  public
    procedure GerarAbastecimento(pAbastecimento : TAbastecimento);
    function ObeterPorId(pId : integer) : TAbastecimento;
    function ObeterPorData(pDataInicial,pDataFinal : TDate) : TObjectList<TAbastecimento>;
    function ObeterPorBomda(pDataInicial,pDataFinal : TDate) : TObjectList<TAbastecimento>;

    Constructor Create(pQuery : TSQLQuery);
end;

implementation

{ TAbastecimentoRepositorio }

constructor TAbastecimentoRepositorio.Create(pQuery : TSQLQuery);
begin
    FSQLQuery := pQuery;
end;

procedure TAbastecimentoRepositorio.GerarAbastecimento(
  pAbastecimento: TAbastecimento);
begin

end;

function TAbastecimentoRepositorio.ObeterPorBomda(pDataInicial,
  pDataFinal: TDate): TObjectList<TAbastecimento>;
begin

end;

function TAbastecimentoRepositorio.ObeterPorData(pDataInicial,
  pDataFinal: TDate): TObjectList<TAbastecimento>;
begin

end;

function TAbastecimentoRepositorio.ObeterPorId(pId: integer): TAbastecimento;
begin

end;

end.
