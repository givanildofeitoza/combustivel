unit UTanqueRepositorio;

interface
 uses
   System.Generics.Collections, Data.SqlExpr, tanque,EnumTipoCombustivel;

 type TTanqueRepositorio=class
    private
       FSQLQuery : TSQLQuery;
    public
       procedure Adicionar(pTanque : TTanque);
       procedure Remover(pId : integer);
       function ObterPorId(pId : integer) : TTanque;
       function ObterTodas() : TObjectList<TTanque>;

       constructor Create(pSQLQuery : TSQLQuery);
 end;

implementation

uses
  System.SysUtils;

{ TTanqueRepositorio }

constructor TTanqueRepositorio.Create(pSQLQuery: TSQLQuery);
begin
    FSQLQuery := pSQLQuery;
end;

procedure TTanqueRepositorio.Adicionar(pTanque: TTanque);
begin
    pTanque.Validar;
    try
       FSQLQuery.SQL.Clear;
       FSQLQuery.SQL.Add('INSERT INTO TANQUE(NOMETANQUE,COMBUSTIVEL) VALUE (');
       FSQLQuery.SQL.Add(quotedstr(pTanque.NomeTanque)+',');
       FSQLQuery.SQL.Add(quotedstr(pTanque.Combustivel.Nome)+')');
       FSQLQuery.ExecSQL();
    except
       raise Exception.Create('Não foi possível cadastrar uma novo tanque!');
    end;
end;

function TTanqueRepositorio.ObterPorId(pId: integer): TTanque;
begin

end;

function TTanqueRepositorio.ObterTodas: TObjectList<TTanque>;
begin

end;

procedure TTanqueRepositorio.Remover(pId: integer);
begin

end;

end.
